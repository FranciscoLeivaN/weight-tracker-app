name: Pruebas de Rendimiento con Lighthouse

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    types: [opened, synchronize, reopened]

# Este workflow ejecuta SOLO las pruebas de rendimiento con Lighthouse/Cypress-Audit
# - Pruebas de rendimiento: performance.cy.js (con umbrales adaptados para CI)

jobs:
  performance-tests:
    name: Ejecutar pruebas de rendimiento
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # Instalar dependencias del sistema necesarias para Chrome/Lighthouse
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libgbm-dev

      - name: Install dependencies
        run: npm ci
        
      # Instalar Chrome específico para Lighthouse
      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          google-chrome --version
          
      # Pre-configurar entorno para Chrome
      - name: Configure Chrome environment
        run: |
          echo "127.0.0.1 localhost" | sudo tee -a /etc/hosts
          # Asegurar que el puerto esté libre
          sudo fuser -k 9222/tcp 2>/dev/null || true
          
          # Crear directorios necesarios para Chrome/Lighthouse
          mkdir -p /tmp/chrome-data
          mkdir -p /tmp/lighthouse-results
          chmod -R 777 /tmp/chrome-data
          chmod -R 777 /tmp/lighthouse-results
          
      # Instalar servidor simple sin webpack para pruebas
      - name: Install serve package
        run: npm install -g serve
          
      # Compilar la aplicación y servirla con 'serve'
      - name: Build and serve application
        run: |
          echo "Compilando la aplicación..."
          npm run build
          
          # Iniciar el servidor 'serve' en lugar de webpack dev server
          echo "Iniciando servidor estático..."
          serve -s build -l 3000 --config serve.json &
          echo $! > server.pid
          
          # Esperar a que el servidor esté disponible
          echo "Verificando disponibilidad del servidor..."
          sleep 5
          curl -I http://localhost:3000 || (echo "Error: Servidor no disponible" && exit 1)
          echo "✅ Servidor disponible en http://localhost:3000"
        env:
          CI: true
      
      # Solución ULTRA simplificada con prueba mínima sin Lighthouse
      - name: Run performance tests
        run: |
          echo "Ejecutando pruebas de rendimiento con configuración ultra minimalista..."
          # Configuración extremadamente simple
          CYPRESS_CACHE_FOLDER=~/.cache/Cypress \
          ELECTRON_EXTRA_LAUNCH_ARGS="--no-sandbox" \
          npx cypress run \
            --spec "cypress/e2e/performance.cy.js" \
            --browser electron \
            --config video=true,videoCompression=false,screenshotOnRunFailure=true \
            --config defaultCommandTimeout=30000,pageLoadTimeout=60000 \
            --config numTestsKeptInMemory=0 \
            --env CI=true
        env:
          CI: true
          CYPRESS_baseUrl: http://localhost:3000
          CYPRESS_ACCEPT_EULA: 1
          CYPRESS_NO_SANDBOX: 1

      # Almacenar resultados como artefactos
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: performance-results-${{ github.run_number }}
          path: |
            cypress/videos/
            cypress/screenshots/
          retention-days: 5
          
      # Limpieza ultra exhaustiva de procesos
      - name: Clean up processes
        if: always()
        run: |
          echo "Limpiando procesos y recursos..."
          
          # Matar servidor usando PID si existe
          if [ -f server.pid ]; then
            kill -9 $(cat server.pid) 2>/dev/null || true
            rm server.pid
          fi
          
          # Matar todos los procesos relacionados con fuerza
          pkill -9 -f "google-chrome" || true
          pkill -9 -f "chrome" || true
          pkill -9 -f "chromium" || true
          pkill -9 -f "serve -s build" || true
          pkill -9 -f "serve" || true
          pkill -9 -f "node" || true
          
          # Liberar puertos con fuerza
          sudo fuser -k -9 9222/tcp 2>/dev/null || true
          sudo fuser -k -9 3000/tcp 2>/dev/null || true
          
          # Limpiar archivos temporales
          rm -rf /tmp/chrome-* || true
          rm -rf /tmp/lighthouse-* || true
          
          # Limpiar caché de Cypress
          rm -rf ~/.cache/Cypress/run || true
          rm -rf ~/.cache/Cypress/cy || true
          
          # Eliminar archivos de bloqueo
          rm -f ~/.X*-lock || true
          
          echo "Limpieza completa finalizada"
